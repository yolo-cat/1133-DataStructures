<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/0728-Queue/src/Queue1.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/0728-Queue/src/Queue1.java" />
              <option name="originalContent" value="public class Queue1 {&#10;    private static final int MAX_SIZE = 5;&#10;    private Object[] data = new Object[MAX_SIZE];&#10;    private int front = 0;&#10;    private int rear = 0;&#10;    private int size = 0;&#10;&#10;    // 入隊&#10;    public void enqueue(Object item) {&#10;        if (size == MAX_SIZE) {&#10;            System.out.println(&quot;空間不足&quot;);&#10;            return;&#10;        }&#10;        data[rear] = item;&#10;        rear = (rear + 1) % MAX_SIZE;&#10;        size++;&#10;    }&#10;&#10;    // 出隊&#10;    public Object dequeue() {&#10;        if (size == 0) {&#10;            System.out.println(&quot;Queue is empty&quot;);&#10;            return null;&#10;        }&#10;        Object item = data[front];&#10;        front = (front + 1) % MAX_SIZE;&#10;        size--;&#10;        return item;&#10;    }&#10;&#10;    // 檢查是否為空&#10;    public boolean isEmpty() {&#10;        return size == 0;&#10;    }&#10;&#10;    // 檢查是否為滿&#10;    public boolean isFull() {&#10;        return size == MAX_SIZE;&#10;    }&#10;&#10;    // 列印 queue 內容&#10;    public void printQueue() {&#10;        System.out.print(&quot;Queue: &quot;);&#10;        for (int i = 0; i &lt; size; i++) {&#10;            System.out.print(data[(front + i) % MAX_SIZE] + &quot; &quot;);&#10;        }&#10;        System.out.println();&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        Queue1 q = new Queue1();&#10;        q.enqueue(1);&#10;        q.enqueue(2);&#10;        q.enqueue(3);&#10;        q.enqueue(4);&#10;        q.enqueue(5);&#10;        q.printQueue();&#10;        q.enqueue(6); // 會顯示空間不足&#10;        q.dequeue();&#10;        q.enqueue(6);&#10;        q.printQueue();&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="public class Queue1 {&#10;    private static final int MAX_SIZE = 5;&#10;    private Object[] data = new Object[MAX_SIZE];&#10;    private int front = 0;&#10;    private int rear = 0;&#10;    private int size = 0;&#10;&#10;    // 入隊&#10;    public void enqueue(Object item) {&#10;        if (size == MAX_SIZE) {&#10;            System.out.println(&quot;空間不足&quot;);&#10;            return;&#10;        }&#10;        data[rear] = item;&#10;        rear = (rear + 1) % MAX_SIZE;&#10;        size++;&#10;    }&#10;&#10;    // 出隊&#10;    public Object dequeue() {&#10;        if (size == 0) {&#10;            System.out.println(&quot;空間淨空&quot;);&#10;            return null;&#10;        }&#10;        Object item = data[front];&#10;        front = (front + 1) % MAX_SIZE;&#10;        size--;&#10;        return item;&#10;    }&#10;&#10;    // 檢查是否為空&#10;    public boolean isEmpty() {&#10;        return size == 0;&#10;    }&#10;&#10;    // 檢查是否為滿&#10;    public boolean isFull() {&#10;        return size == MAX_SIZE;&#10;    }&#10;&#10;    // 列印 queue 內容&#10;    public void printQueue() {&#10;        System.out.print(&quot;Queue: &quot;);&#10;        for (int i = 0; i &lt; size; i++) {&#10;            System.out.print(data[(front + i) % MAX_SIZE] + &quot; &quot;);&#10;        }&#10;        System.out.println();&#10;    }&#10;&#10;    public static void main(String[] args) {&#10;        Queue1 q = new Queue1();&#10;        java.util.Scanner sc = new java.util.Scanner(System.in);&#10;        while (true) {&#10;            System.out.println(&quot;1. 加入 2. 排出 3. 離開&quot;);&#10;            int op = sc.nextInt();&#10;            if (op == 1) {&#10;                System.out.print(&quot;請輸入要加入的值: &quot;);&#10;                Object val = sc.next();&#10;                q.enqueue(val);&#10;            } else if (op == 2) {&#10;                Object out = q.dequeue();&#10;                if (out != null) System.out.println(&quot;排出: &quot; + out);&#10;            } else if (op == 3) {&#10;                break;&#10;            }&#10;            q.printQueue();&#10;        }&#10;        sc.close();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>